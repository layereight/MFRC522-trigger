---
#
# typical run:
#
# ansible-playbook -i inventory MFRC522-trigger.yml
#
# optional extra params: [-e spwa=True]
#

- name: Install prerequisite software
  hosts: my_pi
  gather_facts: false
  tags: [ prerequisite_software ]

  vars:

    debian_packages:
      - python3
      - python3-pip
      - vim

  tasks:

    - name: "Install prerequisite debian packages"
      become: yes
      apt:
        name: "{{ debian_packages }}"
        update_cache: yes
        cache_valid_time: 604800 # 1 week = 7 * 24 * 3600 seconds

    - name: "Install pip requirements file"
      copy:
        src: ../requirements.txt
        dest: /tmp/requirements_MFRC522-trigger.txt

    - name: "Install prerequisite pip packages"
      pip:
        requirements: /tmp/requirements_MFRC522-trigger.txt
        executable: pip3

- name: Prepare Raspberry Pi's /boot/config.txt
  hosts: my_pi
  gather_facts: false
  tags: [ boot_config ]

  tasks:

    - name: Alter /boot/config.txt
      become: yes
      blockinfile:
        path: /boot/config.txt
        insertbefore: "#### Volumio i2s setting below: do not alter ####"
        content: |
          dtparam=spi=on
          dtoverlay=pi3-disable-bt
          enable_uart=1
      register: boot_config

    - name: Reboot the machine when /boot/config.txt was changed
      become: yes
      reboot:
      when: boot_config.changed == true

- name: Clone MFRC522-trigger from github
  hosts: my_pi
  gather_facts: false
  tags: [ clone ]

  vars:

    target_dir: "devel/MFRC522-trigger"

  tasks:

    - name: Create devel directory
      file:
        path: devel
        state: directory

    - name: Clone MFRC522-trigger from github
      git:
        repo: "https://github.com/layereight/MFRC522-trigger.git"
        dest: "{{ target_dir }}"
        force: yes

    - name: Copy config.json from sample file
      copy:
        src: "{{ target_dir }}/config.sample.json"
        remote_src: yes
        dest: "{{ target_dir }}/config.json"
        force: no

- name: Install MFRC522-trigger as systemd service
  hosts: my_pi
  gather_facts: false
  tags: [ systemd ]

  vars:

    mfrc522:
      user: "volumio"
      group: "volumio"
      executable: "/home/volumio/devel/MFRC522-trigger/MFRC522-trigger.py"

  roles:

    - name: systemd
      systemd_service: "MFRC522-trigger"
      systemd_service_template: "MFRC522-trigger.service.j2"

    - name: systemd
      systemd_service: "MFRC522-shutdown"
      systemd_service_template: "MFRC522-shutdown.service.j2"

    - name: systemd
      systemd_service: "speakerbonnet-workaround"
      systemd_service_template: "speakerbonnet-workaround.service.j2"
      when: spwa | default(False)
